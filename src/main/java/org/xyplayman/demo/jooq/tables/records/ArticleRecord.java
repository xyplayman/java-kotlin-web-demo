/*
 * This file is generated by jOOQ.
 */
package org.xyplayman.demo.jooq.tables.records;


import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Row1;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.ULong;
import org.xyplayman.demo.jooq.tables.Article;


/**
 * 文章
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ArticleRecord extends UpdatableRecordImpl<ArticleRecord> implements Record1<ULong> {

    private static final long serialVersionUID = 750542448;

    /**
     * Setter for <code>demo.article.id</code>.
     */
    public void setId(ULong value) {
        set(0, value);
    }

    /**
     * Getter for <code>demo.article.id</code>.
     */
    public ULong getId() {
        return (ULong) get(0);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<ULong> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record1 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row1<ULong> fieldsRow() {
        return (Row1) super.fieldsRow();
    }

    @Override
    public Row1<ULong> valuesRow() {
        return (Row1) super.valuesRow();
    }

    @Override
    public Field<ULong> field1() {
        return Article.ARTICLE.ID;
    }

    @Override
    public ULong component1() {
        return getId();
    }

    @Override
    public ULong value1() {
        return getId();
    }

    @Override
    public ArticleRecord value1(ULong value) {
        setId(value);
        return this;
    }

    @Override
    public ArticleRecord values(ULong value1) {
        value1(value1);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ArticleRecord
     */
    public ArticleRecord() {
        super(Article.ARTICLE);
    }

    /**
     * Create a detached, initialised ArticleRecord
     */
    public ArticleRecord(ULong id) {
        super(Article.ARTICLE);

        set(0, id);
    }
}
